{"version":3,"sources":["apis/todosAPI.js","components/simple/TodoForm.js","components/simple/Todo.js","components/simple/TodoList.js","components/simple/App.js","index.js"],"names":["axios","create","baseURL","headers","Content-Type","Access-Control-Allow-Origin","TodoForm","state","name","_this","props","description","onFormSubmit","e","preventDefault","onSubmit","setState","getChange","property","change","target","value","Object","defineProperty","_this2","this","react_default","a","createElement","className","placeholder","type","onChange","maxLength","React","Component","Todo","edittingState","toggleEditState","prevState","removeTodo","todo","id","onSubmitEditForm","editTodo","concat","complete","simple_TodoForm","onClick","completeTodo","TodoList","children","todos","length","slice","reverse","map","simple_Todo","key","App","addTodo","_callee","res","_args","arguments","regenerator_default","wrap","_context","prev","next","undefined","todosAPI","post","sent","console","log","data","toConsumableArray","stop","updates","put","objectSpread","_callee2","_context2","delete","filter","getTodos","_callee3","response","_context3","get","simple_TodoList","ReactDOM","render","simple_App","document","getElementById"],"mappings":"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","file":"static/js/main.dfea8a6b.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL:'http://70.180.20.186:8081/',\r\n  headers: {\r\n    'Content-Type': 'application/json;charset=UTF-8',\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n  }\r\n})","import React from 'react';\r\n\r\nclass TodoForm extends React.Component {\r\n  state = {\r\n    name: this.props.name ? this.props.name : '',\r\n    description: this.props.description ? this.props.description : ''\r\n  };\r\n\r\n  onFormSubmit = e => {\r\n    e.preventDefault();\r\n    // takes the submit type (edit or add) from props, applies it.\r\n    this.props.onSubmit(this.state.name, this.state.description);\r\n    this.setState(() => ({\r\n      name: '',\r\n      description: ''\r\n    }));\r\n  };\r\n\r\n  getChange = (e, property) => {\r\n    const change = e.target.value;\r\n    this.setState(() => ({ [property]: change }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"ui input\" onSubmit={this.onFormSubmit}>\r\n        <input\r\n          placeholder=\"Name!\"\r\n          type=\"text\"\r\n          onChange={e => this.getChange(e, 'name')}\r\n          value={this.state.name}\r\n          maxLength={15}\r\n        />\r\n        <input\r\n          placeholder=\"Description\"\r\n          type=\"text\"\r\n          onChange={e => this.getChange(e, 'description')}\r\n          value={this.state.description}\r\n          maxLength={24}\r\n        />\r\n        <button className=\"mini ui green button\">{`\\u2713`}</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoForm;\r\n","import React from 'react';\r\nimport TodoForm from './TodoForm';\r\n\r\nclass Todo extends React.Component {\r\n  state = {\r\n    edittingState: false,\r\n  };\r\n  \r\n  // drives the conditional rendering of the edit form\r\n  toggleEditState = () => {\r\n    this.setState(prevState => ({ edittingState: !prevState.edittingState }));\r\n  };\r\n  removeTodo = () => {\r\n    this.props.removeTodo(this.props.todo.id);\r\n  };\r\n  onSubmitEditForm = (name, description) => {\r\n    this.props.editTodo(this.props.todo.id, {name, description});\r\n    this.toggleEditState();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div \r\n        className={`item ${this.props.todo.complete ? 'selected' : ''}`}\r\n      >\r\n        {this.state.edittingState ? (\r\n          <TodoForm\r\n            name={this.props.todo.name}\r\n            description={this.props.todo.description}\r\n            onSubmit={this.onSubmitEditForm}\r\n          />\r\n        ) : (\r\n          <div>\r\n            <h4 \r\n              className=\"left floated content\"\r\n              onClick={() =>{\r\n                this.props.completeTodo(this.props.todo.id, !this.props.todo.complete)\r\n              }}\r\n            >\r\n              {this.props.todo.name} :\r\n            </h4>\r\n            <span\r\n              className=\"content\"\r\n              onClick={() =>{\r\n                this.props.completeTodo(this.props.todo.id, !this.props.todo.complete)\r\n              }\r\n              }\r\n            >\r\n              {this.props.todo.description}\r\n            </span>\r\n            <div className=\"right floated content\">\r\n              <button className=\"mini ui red button\" onClick={this.removeTodo}>\r\n                <i className=\"close icon custom\" />\r\n              </button>\r\n            </div>\r\n            {!this.props.todo.complete && (\r\n              <div className=\"right floated content\">\r\n                <button\r\n                  className=\"mini ui teal button\"\r\n                  onClick={this.toggleEditState}\r\n                >\r\n                  <i className=\"edit icon\" />\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Todo;\r\n","import React from 'react';\r\n// import { connect } from 'react-redux'\r\n// import { fetchTodos } from '../actions'\r\nimport Todo from './Todo'\r\n\r\nclass TodoList extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"ui segment\">\r\n      <h3>Add Todo</h3>\r\n        {this.props.children}\r\n        <div className=\"ui segment\">\r\n          {\r\n            this.props.todos.length === 0 && <h4 className=\"ui horizontal divider header\"> Empty!\r\n            </h4>\r\n          }\r\n          <div className=\"ui middle aligned animated list\">\r\n            {\r\n              // reverses a /copy/ of the array.\r\n              this.props.todos.slice(0).reverse().map((todo) => {\r\n                return <Todo \r\n                  editTodo={this.props.editTodo} \r\n                  key={todo.id}\r\n                  todo={todo}\r\n                  removeTodo={this.props.removeTodo}\r\n                  completeTodo={this.props.completeTodo}\r\n                />\r\n              })\r\n            }\r\n          </div>\r\n        </div>    \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport todosAPI from '../../apis/todosAPI';\r\n// import uuid from 'uuid/v4';\r\n\r\nimport TodoList from './TodoList';\r\nimport TodoForm from './TodoForm';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    todos: []\r\n  };\r\n\r\n  // each action will need error handling. if api call is successful, do this,\r\n  // otherwise, do that.\r\n  addTodo = async (name = '', description = '') => {\r\n    // api call\r\n    try {\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    let res = await todosAPI.post('/todos', {\r\n      name,\r\n      description,\r\n      complete: false\r\n    });\r\n    console.log(res.data.id);\r\n    this.setState((prevState) => ({\r\n      todos: [\r\n        ...prevState.todos,\r\n        {\r\n          id: res.data.id,\r\n          name: name,\r\n          description: description,\r\n          complete: false\r\n        }\r\n      ]\r\n    }));\r\n  };\r\n\r\n  // updates is an object\r\n  editTodo = (id, updates) => {\r\n    this.setState((prevState) => ({\r\n      todos: prevState.todos.map((todo) => {\r\n        if (todo.id === id) {\r\n          todosAPI.put(`/todos/${id}`, { ...todo, ...updates });\r\n          return {\r\n            ...todo,\r\n            ...updates\r\n          };\r\n        } else {\r\n          return { ...todo };\r\n        }\r\n      })\r\n    }));\r\n  };\r\n\r\n  removeTodo = async (id) => {\r\n    // api call\r\n    todosAPI.delete(`/todos/${id}`);\r\n    this.setState((prevState) => ({\r\n      todos: prevState.todos.filter((todo) => todo.id !== id)\r\n    }));\r\n  };\r\n\r\n  getTodos = async () => {\r\n    // api call\r\n    const response = await todosAPI.get('/todos');\r\n    this.setState(() => ({\r\n      todos: response.data\r\n    }));\r\n  };\r\n\r\n  completeTodo = (id, complete) => {\r\n    this.editTodo(id, { complete });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getTodos();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ui container\">\r\n        <TodoList\r\n          todos={this.state.todos}\r\n          editTodo={this.editTodo}\r\n          removeTodo={this.removeTodo}\r\n          completeTodo={this.completeTodo}\r\n        >\r\n          <TodoForm onSubmit={this.addTodo} />\r\n        </TodoList>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\n// COMPLEX\r\n// import { Provider } from 'react-redux';\r\n// import configureStore from './store/configureStore'\r\n// import App from './components/complex/App';\r\n// const store = configureStore();\r\n// ReactDOM.render(\r\n//   <Provider store={store}>\r\n//     <App/>\r\n//   </Provider>,\r\n// document.getElementById('root'));\r\n\r\n// SIMPLE;\r\nimport App from './components/simple/App';\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}